syntax = "proto3";

import "google/protobuf/empty.proto";
import "common.proto";

package sentry;

enum OutboundMessageId {
  GetBlockHeaders = 0;
  GetBlockBodies = 1;
}

message OutboundMessageData {
  OutboundMessageId id = 1;
  bytes data = 2;
}

message SendMessageByMinBlockRequest {
  OutboundMessageData data = 1;
  uint64 min_block = 2;
}

message SendMessageByIdRequest {
  OutboundMessageData data = 1;
  string peer_id = 2;
}

message SendMessageToRandomPeersRequest {
  OutboundMessageData data = 1;
  uint64 max_peers = 2;
}

message SetAttributeRequest {
  string peer_id = 1;
  string key = 2;
  uint64 value = 3;
}

enum PenaltyKind { Kick = 0; }

message PenalizePeerRequest {
  string peer_id = 1;
  PenaltyKind penalty = 2;
}

service Sentry {
  rpc SetAttribute(SetAttributeRequest) returns (google.protobuf.Empty);
  rpc PenalizePeer(PenalizePeerRequest) returns (google.protobuf.Empty);
  rpc SendMessageByMinBlock(SendMessageByMinBlockRequest)
      returns (google.protobuf.Empty);
  rpc SendMessageById(SendMessageByIdRequest) returns (google.protobuf.Empty);
  rpc SendMessageToRandomPeers(SendMessageToRandomPeersRequest)
      returns (google.protobuf.Empty);
  rpc SendMessageToAll(OutboundMessageData) returns (google.protobuf.Empty);
}